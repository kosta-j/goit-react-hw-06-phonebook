{"version":3,"sources":["components/Filter/Filter.module.css","components/Title/Title.module.css","components/Section/Section.module.css","components/Wrapper/Wrapper.module.css","Redux/action-types.js","Redux/reducers.js","Redux/store.js","Redux/actions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Notification/Notification.jsx","components/Title/Title.jsx","components/Section/Section.jsx","components/Wrapper/Wrapper.jsx","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","types","ADD","DELETE","CHANGE_FILTER","contactItemsReducer","createReducer","state","payload","filter","item","name","length","alert","id","contactFilterReducer","_","contactsReducer","combineReducers","items","contactsPersistConfig","key","storage","blacklist","persistedContactsReducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","devTools","process","persistor","persistStore","addContact","createAction","data","uuidv4","number","deleteContact","changeFilter","connect","dispatch","onSubmit","contact","actions","useState","setName","setNumber","handleChange","e","currentTarget","value","console","log","reset","preventDefault","className","s","inputTitle","type","input","pattern","title","required","onChange","submitBtn","ContactItem","children","normalizedFilter","toLowerCase","includes","onDeleteBtnClick","contactList","map","button","onClick","Notification","text","Title","Section","section","wrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,WAAa,2BAA2B,MAAQ,wB,mBCAlED,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,QAAU,2B,uKCKvEC,EAND,CACZC,IAAK,uBACLC,OAAQ,0BACRC,cAAe,mBCAXC,EAAsBC,YAAc,IAAD,mBACtCL,EAAMC,KAaT,SAAoBK,EAApB,GAAyC,IAAZC,EAAW,EAAXA,QAE3B,GAAID,EAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASH,EAAQG,QAAMC,OAAS,EAE5D,OADAC,MAAM,GAAD,OAAIL,EAAQG,KAAZ,4BACEJ,EAET,MAAM,GAAN,mBAAWA,GAAX,CAAkBC,OApBqB,cAEtCP,EAAME,QAqBT,SAAuBI,EAAvB,GAA4C,IAAZC,EAAW,EAAXA,QAC9B,OAAOD,EAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKI,KAAON,EAAQM,SAxBT,IAKnCC,EAAuBT,YAAc,GAAD,eACvCL,EAAMG,eAAgB,SAACY,EAAD,YAAMR,YAqBhBS,MAlBSC,YAAgB,CACtCC,MAAOd,EACPI,OAAQM,ICKJK,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAA2BC,YAC/BL,EACAH,GAGIS,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAQC,YAAe,CAC3BC,QAAS,CAAEC,SAAUf,GACrBE,WAAYA,EACZc,UAAUC,IAKG,GAAEL,QAAOM,UAFNC,YAAaP,I,gBCxClBQ,EAAaC,YAAa5C,EAAMC,KAAK,SAAA4C,GAAI,MAAK,CACzDtC,QAAS,CAAEM,GAAIiC,cAAUpC,KAAMmC,EAAKnC,KAAMqC,OAAQF,EAAKE,YAG5CC,EAAgBJ,YAAa5C,EAAME,QAEnC+C,EAAeL,YAAa5C,EAAMG,e,uBC2D/C,IAMe+C,cAAQ,MANI,SAAAC,GACzB,MAAO,CACLC,SAAU,SAAAC,GAAO,OAAIF,EAASG,EAAmBD,QAItCH,EAtEf,YAAoC,IAAbE,EAAY,EAAZA,SACrB,EAAwBG,mBAAS,IAAjC,mBAAO7C,EAAP,KAAa8C,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOR,EAAP,KAAeU,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBlD,EAAR,EAAQA,KAAMmD,EAAd,EAAcA,MACd,OAAQnD,GACN,IAAK,OACH8C,EAAQK,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACEC,QAAQC,IAAI,gCAUZC,EAAQ,WACZR,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAML,SAZa,SAAAO,GACnBA,EAAEM,iBACFb,EAAS,CAAE1C,OAAMqC,WACjBiB,KASA,UACE,kCACE,mBAAGE,UAAWC,IAAEC,WAAhB,kBACA,uBACEC,KAAK,OACL3D,KAAK,OACLwD,UAAWC,IAAEG,MACbC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRZ,MAAOnD,EACPgE,SAAUhB,OAGd,kCACE,mBAAGQ,UAAWC,IAAEC,WAAhB,oBACA,uBACEC,KAAK,MACL3D,KAAK,SACLwD,UAAWC,IAAEG,MACbC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRZ,MAAOd,EACP2B,SAAUhB,OAGd,wBAAQW,KAAK,SAASH,UAAWC,IAAEQ,UAAnC,+B,gBC5CSC,MAff,YAAkD,IAA3BlE,EAA0B,EAA1BA,KAAMqC,EAAoB,EAApBA,OAAQ8B,EAAY,EAAZA,SACnC,OACE,qBAAIX,UAAWC,IAAE1D,KAAjB,UACGC,EADH,KACWqC,EACR8B,MCuBP,IAiBe3B,eAjBS,SAAA5C,GACtB,MAA0BA,EAAMgC,SAAxB9B,EAAR,EAAQA,OAAQU,EAAhB,EAAgBA,MACV4D,EAAmBtE,EAAOuE,cAIhC,MAAO,CACLzC,SAJuBpB,EAAMV,QAAO,SAAA6C,GAAO,OAC3CA,EAAQ3C,KAAKqE,cAAcC,SAASF,UAOb,SAAA3B,GACzB,MAAO,CACL8B,iBAAkB,SAAA5B,GAAO,OAAIF,EAASG,EAAsBD,QAIjDH,EAzCf,YAAsD,IAA/BZ,EAA8B,EAA9BA,SAAU2C,EAAoB,EAApBA,iBAC/B,OACE,oBAAIf,UAAWC,IAAEe,YAAjB,SACG5C,EAAS6C,KAAI,SAAA9B,GAAO,OACnB,cAAC,EAAD,CAEE3C,KAAM2C,EAAQ3C,KACdqC,OAAQM,EAAQN,OAChBkC,iBAAkBA,EAJpB,SAME,wBAAQZ,KAAMF,IAAEiB,OAAQC,QAAS,kBAAMJ,EAAiB5B,IAAxD,qBALKA,EAAQxC,Y,iBCavB,IAaeqC,eAbS,SAAA5C,GACtB,MAAO,CACLuD,MAAOvD,EAAMgC,SAAS9B,OACtB8B,SAAUhC,EAAMgC,SAASpB,UAIF,SAAAiC,GACzB,MAAO,CACLuB,SAAU,SAAAf,GAAC,OAAIR,EAASG,EAAqBK,EAAEC,cAAcC,YAIlDX,EAhCf,YAAsC,IAApBW,EAAmB,EAAnBA,MAAOa,EAAY,EAAZA,SACvB,OACE,kCACE,mBAAGR,UAAWC,IAAEC,WAAhB,mCACA,uBACEF,UAAWC,IAAEG,MACbD,KAAK,OACLR,MAAOA,EACPa,SAAUA,UCHHY,MARf,YAAiC,IAATC,EAAQ,EAARA,KACtB,OAAO,4BAAIA,K,iBCGEC,MAJf,YAA2B,IAAVhB,EAAS,EAATA,MACf,OAAO,oBAAIN,UAAWC,IAAEK,MAAjB,SAAyBA,K,iBCSnBiB,MATf,YAAuC,IAApBjB,EAAmB,EAAnBA,MAAOK,EAAY,EAAZA,SACxB,OACE,0BAASX,UAAWC,IAAEuB,QAAtB,UACE,cAAC,EAAD,CAAOlB,MAAOA,IACbK,M,iBCqBP,IAMe3B,eANS,SAAA5C,GACtB,MAAO,CACLgC,SAAUhC,EAAMgC,SAASpB,SAIdgC,EA1Bf,YAAgC,IAAbZ,EAAY,EAAZA,SACjB,OACE,sBAAK4B,UAAWC,IAAEwB,QAAlB,UACE,cAAC,EAAD,CAASnB,MAAM,YAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAASA,MAAM,WAAf,SACGlC,EAAS3B,OAAS,EACjB,cAAC,EAAD,CAAc4E,KAAK,0BAEnB,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,eCdGK,MAJf,WACE,OAAO,cAAC,EAAD,KCSMC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUrE,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAasE,QAAS,KAAMhE,UAAWN,EAAMM,UAA7C,SACE,cAAC,EAAD,UAINiE,SAASC,eAAe,SAM1Bd,K,kBCtBA/F,EAAOC,QAAU,CAAC,WAAa,gCAAgC,UAAY,+BAA+B,MAAQ,6B,kBCAlHD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.e6a78e58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTitle\":\"Filter_inputTitle__2lIih\",\"input\":\"Filter_input__2CrvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1Dv2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3E9V9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Wrapper_list__3a3vX\",\"link\":\"Wrapper_link___iYWJ\",\"wrapper\":\"Wrapper_wrapper__1QXDL\"};","const types = {\r\n  ADD: 'contacts/add_contact',\r\n  DELETE: 'contacts/delete_contact',\r\n  CHANGE_FILTER: 'contacts/filter',\r\n};\r\n\r\nexport default types;\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport types from './action-types';\r\n\r\nconst contactItemsReducer = createReducer([], {\r\n  [types.ADD]: addContact,\r\n  [types.DELETE]: deleteContact,\r\n});\r\n\r\nconst contactFilterReducer = createReducer('', {\r\n  [types.CHANGE_FILTER]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: contactItemsReducer,\r\n  filter: contactFilterReducer,\r\n});\r\n\r\nfunction addContact(state, { payload }) {\r\n  //duplicated name check:\r\n  if (state.filter(item => item.name === payload.name).length > 0) {\r\n    alert(`${payload.name} is already in contacts`);\r\n    return state;\r\n  }\r\n  return [...state, payload];\r\n}\r\n\r\nfunction deleteContact(state, { payload }) {\r\n  return state.filter(item => item.id !== payload.id);\r\n}\r\n\r\nexport default contactsReducer;\r\n","import {\r\n  // combineReducers,\r\n  configureStore,\r\n  // createReducer,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  PAUSE,\r\n  PERSIST,\r\n  persistReducer,\r\n  persistStore,\r\n  PURGE,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './reducers';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst persistedContactsReducer = persistReducer(\r\n  contactsPersistConfig,\r\n  contactsReducer,\r\n);\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: persistedContactsReducer },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport types from './action-types';\r\n\r\nexport const addContact = createAction(types.ADD, data => ({\r\n  payload: { id: uuidv4(), name: data.name, number: data.number },\r\n}));\r\n\r\nexport const deleteContact = createAction(types.DELETE);\r\n\r\nexport const changeFilter = createAction(types.CHANGE_FILTER);\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/actions';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        console.log('this data is not supported');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        <p className={s.inputTitle}>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <p className={s.inputTitle}>Number</p>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.submitBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: contact => dispatch(actions.addContact(contact)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactItem({ name, number, children }) {\r\n  return (\r\n    <li className={s.item}>\r\n      {name}: {number}\r\n      {children}\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from './ContactItem';\r\nimport * as actions from '../../Redux/actions';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteBtnClick }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactItem\r\n          key={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onDeleteBtnClick={onDeleteBtnClick}\r\n        >\r\n          <button type={s.button} onClick={() => onDeleteBtnClick(contact)}>\r\n            Delete\r\n          </button>\r\n        </ContactItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteBtnClick: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { filter, items } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const filteredContacts = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n  return {\r\n    contacts: filteredContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteBtnClick: contact => dispatch(actions.deleteContact(contact)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <p className={s.inputTitle}>Find contacts by name</p>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    value: state.contacts.filter,\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChange: e => dispatch(actions.changeFilter(e.currentTarget.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ text }) {\r\n  return <p>{text}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import s from './Title.module.css';\r\n\r\nfunction Title({ title }) {\r\n  return <h2 className={s.title}>{title}</h2>;\r\n}\r\n\r\nexport default Title;\r\n","import Title from '../Title/Title';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <Title title={title} />\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import { connect } from 'react-redux';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport Notification from '../Notification/Notification';\r\nimport Section from '../Section/Section';\r\nimport s from './Wrapper.module.css';\r\n\r\nfunction Wrapper({ contacts }) {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        {contacts.length < 1 ? (\r\n          <Notification text=\"Contact list is empty\" />\r\n        ) : (\r\n          <>\r\n            <Filter />\r\n            <ContactList />\r\n          </>\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Wrapper);\r\n","import Wrapper from './components/Wrapper/Wrapper';\n\nfunction App() {\n  return <Wrapper />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './Redux/store';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTitle\":\"ContactForm_inputTitle__Qb2xm\",\"submitBtn\":\"ContactForm_submitBtn__1T3Hb\",\"input\":\"ContactForm_input__3vKm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__29gGn\",\"item\":\"ContactList_item__1a6VL\",\"button\":\"ContactList_button__1M8gN\"};"],"sourceRoot":""}